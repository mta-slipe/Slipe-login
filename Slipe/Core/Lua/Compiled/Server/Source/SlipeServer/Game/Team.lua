-- Generated by CSharp.lua Compiler
local System = System
local SlipeMtaDefinitions
local SlipeServerPeds
local SlipeSharedElements
local SlipeSharedUtilities
System.import(function (out)
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeServerPeds = Slipe.Server.Peds
  SlipeSharedElements = Slipe.Shared.Elements
  SlipeSharedUtilities = Slipe.Shared.Utilities
end)
System.namespace("Slipe.Server.Game", function (namespace)
  -- <summary>
  -- Class representing a team of players
  -- </summary>
  namespace.class("Team", function (namespace)
    local getPlayerCount, getName, setName, getFriendlyFire, setFriendlyFire, getColor, setColor, getPlayers, 
    __ctor1__, __ctor2__
    __ctor1__ = function (this, team)
      SlipeSharedElements.Element.__ctor__[2](this, team)
    end
    -- <summary>
    -- Create a new team on the server
    -- </summary>
    -- <param name="color">The color of this team</param>
    __ctor2__ = function (this, name, color)
      __ctor1__(this, SlipeMtaDefinitions.MtaServer.CreateTeam(name, color:getR(), color:getG(), color:getB()))
    end
    getPlayerCount = function (this)
      return SlipeMtaDefinitions.MtaShared.CountPlayersInTeam(this:getMTAElement())
    end
    getName = function (this)
      return SlipeMtaDefinitions.MtaShared.GetTeamName(this:getMTAElement())
    end
    setName = function (this, value)
      SlipeMtaDefinitions.MtaServer.SetTeamName(this:getMTAElement(), value)
    end
    getFriendlyFire = function (this)
      return SlipeMtaDefinitions.MtaShared.GetTeamFriendlyFire(this:getMTAElement())
    end
    setFriendlyFire = function (this, value)
      SlipeMtaDefinitions.MtaServer.SetTeamFriendlyFire(this:getMTAElement(), value)
    end
    getColor = function (this)
      local color = SlipeMtaDefinitions.MtaShared.GetTeamColor(this:getMTAElement())
      return System.new(SlipeSharedUtilities.Color, 4, System.toByte(color[1]), System.toByte(color[2]), System.toByte(color[3]))
    end
    setColor = function (this, value)
      SlipeMtaDefinitions.MtaServer.SetTeamColor(this:getMTAElement(), value:getR(), value:getG(), value:getB())
    end
    getPlayers = function (this)
      local mtaPlayers = SlipeMtaDefinitions.MtaShared.GetArrayFromTable(SlipeMtaDefinitions.MtaShared.GetPlayersInTeam(this:getMTAElement()), "MTAElement", T)
      return SlipeSharedElements.ElementManager.getInstance():CastArray(mtaPlayers, SlipeServerPeds.Player)
    end
    return {
      __inherits__ = function (out)
        return {
          out.Slipe.Shared.Elements.Element
        }
      end,
      getPlayerCount = getPlayerCount,
      getName = getName,
      setName = setName,
      getFriendlyFire = getFriendlyFire,
      setFriendlyFire = setFriendlyFire,
      getColor = getColor,
      setColor = setColor,
      getPlayers = getPlayers,
      __ctor__ = {
        __ctor1__,
        __ctor2__
      },
      __metadata__ = function (out)
        return {
          properties = {
            { "Color", 0x106, out.Slipe.Shared.Utilities.Color, getColor, setColor },
            { "FriendlyFire", 0x106, System.Boolean, getFriendlyFire, setFriendlyFire },
            { "Name", 0x106, System.String, getName, setName },
            { "PlayerCount", 0x206, System.Int32, getPlayerCount },
            { "Players", 0x206, System.Array(out.Slipe.Server.Peds.Player), getPlayers }
          },
          methods = {
            { ".ctor", 0x106, __ctor1__, out.Slipe.MtaDefinitions.MtaElement },
            { ".ctor", 0x206, __ctor2__, System.String, out.Slipe.Shared.Utilities.Color }
          },
          class = { 0x6, System.new(out.Slipe.Shared.Elements.DefaultElementClassAttribute, 2, 11 --[[ElementType.Team]]) }
        }
      end
    }
  end)
end)

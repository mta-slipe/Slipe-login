-- Generated by CSharp.lua Compiler
local System = System
local SlipeMtaDefinitions
local SlipeServerAcl
local SlipeSharedExceptions
local ArrayAclEntry
System.import(function (out)
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeServerAcl = Slipe.Server.Acl
  SlipeSharedExceptions = Slipe.Shared.Exceptions
  ArrayAclEntry = System.Array(SlipeServerAcl.AclEntry)
end)
System.namespace("Slipe.Server.Acl", function (namespace)
  -- <summary>
  -- ACL or Access Control List is a set of rights grouped together to create a list
  -- </summary>
  namespace.class("AclEntry", function (namespace)
    local getACL, getName, getAll, GetRights, GetRight, SetRight, RemoveRight, Destroy, 
    Get, class, __ctor1__, __ctor2__
    __ctor1__ = function (this, mtaAclEntry)
      this.entry = mtaAclEntry
    end
    -- <summary>
    -- Create a new ACL entry
    -- </summary>
    __ctor2__ = function (this, name)
      __ctor1__(this, SlipeMtaDefinitions.MtaServer.AclCreate(name))
    end
    getACL = function (this)
      return this.entry
    end
    getName = function (this)
      return SlipeMtaDefinitions.MtaServer.AclGetName(this.entry)
    end
    getAll = function ()
      local mtaAcls = SlipeMtaDefinitions.MtaShared.GetArrayFromTable(SlipeMtaDefinitions.MtaServer.AclList(), "acl", T)
      local acls = ArrayAclEntry:new(#mtaAcls)
      for i = 0, #mtaAcls - 1 do
        acls:set(i, class(mtaAcls:get(i)))
      end
      return acls
    end
    -- <summary>
    -- Get an array of all rights on this ACL entry
    -- </summary>
    GetRights = function (this, rightType)
      return SlipeMtaDefinitions.MtaShared.GetArrayFromTable(SlipeMtaDefinitions.MtaServer.AclListRights(this.entry, rightType:ToEnumString(SlipeServerAcl.AclRightEnum):ToLower()), "System.String", T)
    end
    -- <summary>
    -- Get a right by its name
    -- </summary>
    GetRight = function (this, right)
      return SlipeMtaDefinitions.MtaServer.AclGetRight(this.entry, right)
    end
    -- <summary>
    -- Set a new right on this ACL entry
    -- </summary>
    SetRight = function (this, right, hasAccess)
      return SlipeMtaDefinitions.MtaServer.AclSetRight(this.entry, right, hasAccess)
    end
    -- <summary>
    -- Removes a right form this ACL entry
    -- </summary>
    RemoveRight = function (this, right)
      return SlipeMtaDefinitions.MtaServer.AclRemoveRight(this.entry, right)
    end
    -- <summary>
    -- Removes this ACL entry
    -- </summary>
    Destroy = function (this)
      return SlipeMtaDefinitions.MtaServer.AclDestroy(this.entry)
    end
    -- <summary>
    -- Get an existing ACL entry from its name
    -- </summary>
    Get = function (name)
      local result = SlipeMtaDefinitions.MtaServer.AclGet(name)
      if result == nil then
        System.throw(SlipeSharedExceptions.NullElementException("No ACL entry with the name " .. name .. " can be found"))
      end
      return class(result)
    end
    class = {
      getACL = getACL,
      getName = getName,
      getAll = getAll,
      GetRights = GetRights,
      GetRight = GetRight,
      SetRight = SetRight,
      RemoveRight = RemoveRight,
      Destroy = Destroy,
      Get = Get,
      __ctor__ = {
        __ctor1__,
        __ctor2__
      },
      __metadata__ = function (out)
        return {
          fields = {
            { "entry", 0x5, out.Slipe.MtaDefinitions.MtaAcl }
          },
          properties = {
            { "ACL", 0x206, out.Slipe.MtaDefinitions.MtaAcl, getACL },
            { "All", 0x20E, System.Array(out.Slipe.Server.Acl.AclEntry), getAll },
            { "Name", 0x206, System.String, getName }
          },
          methods = {
            { ".ctor", 0x106, __ctor1__, out.Slipe.MtaDefinitions.MtaAcl },
            { ".ctor", 0x106, __ctor2__, System.String },
            { "Destroy", 0x86, Destroy, System.Boolean },
            { "Get", 0x18E, Get, System.String, class },
            { "GetRight", 0x186, GetRight, System.String, System.Boolean },
            { "GetRights", 0x186, GetRights, System.Int32, System.Array(System.String) },
            { "RemoveRight", 0x186, RemoveRight, System.String, System.Boolean },
            { "SetRight", 0x286, SetRight, System.String, System.Boolean, System.Boolean }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)

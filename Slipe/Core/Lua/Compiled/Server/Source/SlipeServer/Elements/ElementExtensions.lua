-- Generated by CSharp.lua Compiler
local System = System
local SlipeMtaDefinitions
local SlipeServerPeds
local SlipeSharedElements
System.import(function (out)
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeServerPeds = Slipe.Server.Peds
  SlipeSharedElements = Slipe.Shared.Elements
end)
System.namespace("Slipe.Server.Elements", function (namespace)
  -- <summary>
  -- Extensions for the base shared element class on the server
  -- </summary>
  namespace.class("ElementExtensions", function (namespace)
    local SetVisibleTo, ClearVisibleTo, IsVisibleTo, Clone, GetZoneName, GetSyncer, SetSyncer
    -- <summary>
    -- Set this element visible for a specific target
    -- </summary>
    SetVisibleTo = function (source, target, visible)
      return SlipeMtaDefinitions.MtaServer.SetElementVisibleTo(source:getMTAElement(), target:getMTAElement(), visible)
    end
    -- <summary>
    -- Clear all visibility settings of this element
    -- </summary>
    ClearVisibleTo = function (source)
      return SlipeMtaDefinitions.MtaServer.ClearElementVisibleTo(source:getMTAElement())
    end
    -- <summary>
    -- Checks if this element is visible to another
    -- </summary>
    IsVisibleTo = function (source, target)
      return SlipeMtaDefinitions.MtaServer.IsElementVisibleTo(source:getMTAElement(), target:getMTAElement())
    end
    -- <summary>
    -- Clones this element. Returns an element of the proper type
    -- </summary>
    Clone = function (source, position)
      local mtaElement = SlipeMtaDefinitions.MtaServer.CloneElement(source:getMTAElement(), position.X, position.Y, position.Z, false)
      return SlipeSharedElements.ElementManager.getInstance():GetElement1(mtaElement)
    end
    -- <summary>
    -- Gets this element's zone name
    -- </summary>
    GetZoneName = function (source, citiesOnly)
      return SlipeMtaDefinitions.MtaServer.GetElementZoneName(source:getMTAElement(), citiesOnly)
    end
    -- <summary>
    -- Gets the syncer of this element
    -- </summary>
    GetSyncer = function (source)
      return SlipeSharedElements.ElementManager.getInstance():GetElement(SlipeMtaDefinitions.MtaServer.GetElementSyncer(source:getMTAElement()), SlipeServerPeds.Player)
    end
    -- <summary>
    -- Sets the syncer of this element
    -- </summary>
    SetSyncer = function (source, target)
      return SlipeMtaDefinitions.MtaServer.SetElementSyncer(source:getMTAElement(), target:getMTAElement())
    end
    return {
      SetVisibleTo = SetVisibleTo,
      ClearVisibleTo = ClearVisibleTo,
      IsVisibleTo = IsVisibleTo,
      Clone = Clone,
      GetZoneName = GetZoneName,
      GetSyncer = GetSyncer,
      SetSyncer = SetSyncer,
      __metadata__ = function (out)
        return {
          methods = {
            { "ClearVisibleTo", 0x18E, ClearVisibleTo, out.Slipe.Shared.Elements.Element, System.Boolean },
            { "Clone", 0x28E, Clone, out.Slipe.Shared.Elements.Element, System.Numerics.Vector3, out.Slipe.Shared.Elements.Element },
            { "GetSyncer", 0x18E, GetSyncer, out.Slipe.Shared.Elements.PhysicalElement, out.Slipe.Server.Peds.Player },
            { "GetZoneName", 0x28E, GetZoneName, out.Slipe.Shared.Elements.PhysicalElement, System.Boolean, System.String },
            { "IsVisibleTo", 0x28E, IsVisibleTo, out.Slipe.Shared.Elements.Element, out.Slipe.Shared.Elements.Element, System.Boolean },
            { "SetSyncer", 0x28E, SetSyncer, out.Slipe.Shared.Elements.PhysicalElement, out.Slipe.Server.Peds.Player, System.Boolean },
            { "SetVisibleTo", 0x38E, SetVisibleTo, out.Slipe.Shared.Elements.Element, out.Slipe.Shared.Elements.Element, System.Boolean, System.Boolean }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)

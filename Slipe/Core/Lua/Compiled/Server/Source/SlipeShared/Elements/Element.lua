-- Generated by CSharp.lua Compiler
local System = System
local SlipeMtaDefinitions
local SlipeSharedElements
System.import(function (out)
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeSharedElements = Slipe.Shared.Elements
end)
System.namespace("Slipe.Shared.Elements", function (namespace)
  -- <summary>
  -- The main Element class representing an OO version of MTA elements
  -- </summary>
  namespace.class("Element", function (namespace)
    local getRoot, getMTAElement, getType, getID, setID, getChildCount, getParent, setParent, 
    getCallPropagationEnabled, setCallPropagationEnabled, SetData, GetData, TryGetData, GetData1, TryGetData1, Destroy, 
    GetChild, GetChildren, GetByID, op_Explicit, ListenForEvent, HandleEvent, class, __ctor1__, 
    __ctor2__, __ctor3__
    __ctor1__ = function (this)
    end
    -- <summary>
    -- Create an element from a MTA element instance
    -- </summary>
    __ctor2__ = function (this, mtaElement)
      this.element = mtaElement
      SlipeSharedElements.ElementManager.getInstance():RegisterElement(this)
    end
    -- <summary>
    -- Create a dummy element in the element tree
    -- </summary>
    __ctor3__ = function (this, elementType, elementID)
      __ctor2__(this, SlipeMtaDefinitions.MtaShared.CreateElement(elementType, elementID))
    end
    getRoot = function ()
      return SlipeSharedElements.ElementManager.getInstance():getRoot()
    end
    getMTAElement = function (this)
      return this.element
    end
    getType = function (this)
      return SlipeMtaDefinitions.MtaShared.GetElementType(this.element)
    end
    getID = function (this)
      return SlipeMtaDefinitions.MtaShared.GetElementID(this.element)
    end
    setID = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetElementID(this.element, value)
    end
    getChildCount = function (this)
      return SlipeMtaDefinitions.MtaShared.GetElementChildrenCount(this.element)
    end
    getParent = function (this)
      return SlipeSharedElements.ElementManager.getInstance():GetElement1(SlipeMtaDefinitions.MtaShared.GetElementParent(this.element))
    end
    setParent = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetElementParent(this.element, getMTAElement(value))
    end
    getCallPropagationEnabled = function (this)
      return SlipeMtaDefinitions.MtaShared.IsElementCallPropagationEnabled(this.element)
    end
    setCallPropagationEnabled = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetElementCallPropagationEnabled(this.element, value)
    end
    -- <summary>
    -- Sets element data
    -- </summary>
    -- <param name="value"></param>
    -- <param name="synchronised"></param>
    SetData = function (this, key, value, synchronize)
      SlipeMtaDefinitions.MtaShared.SetElementData(getMTAElement(this), key, value, synchronize)
    end
    -- <summary>
    -- Gets element data
    -- </summary>
    -- <param name="inherit"></param>
    -- <returns></returns>
    GetData = function (this, key, inherit)
      return SlipeMtaDefinitions.MtaShared.GetElementData(getMTAElement(this), key, inherit)
    end
    -- <summary>
    -- This function tries to retrieve the data value and returns true if this was succesful
    -- </summary>
    -- <param name="data">The string to which to write the data to</param>
    -- <param name="inherit"></param>
    -- <returns>True if the data was succesfully retrieved, false otherwise</returns>
    TryGetData = function (this, key, data, inherit)
      local default, extern = System.try(function ()
        data = SlipeMtaDefinitions.MtaShared.GetElementData(getMTAElement(this), key, inherit)
        return true, true
      end, function (default)
        data = ""
        return true, false
      end)
      if default then
        return extern, data
      end
    end
    -- <summary>
    -- Gets element data
    -- </summary>
    -- <param name="key"></param>
    -- <param name="inherit"></param>
    -- <returns></returns>
    GetData1 = function (this, key, inherit, T)
      return System.cast(T, GetData(this, key, inherit))
    end
    -- <summary>
    -- This function tries to retrieve the data value and returns true if this was succesful
    -- </summary>
    -- <param name="key">The key at which data is stored</param>
    -- <param name="data">The string to which to write the data to</param>
    -- <param name="inherit"></param>
    -- <returns>True if the data was succesfully retrieved, false otherwise</returns>
    TryGetData1 = function (this, key, data, inherit, T)
      local default, extern = System.try(function ()
        data = System.cast(T, SlipeMtaDefinitions.MtaShared.GetElementData(getMTAElement(this), key, inherit))
        return true, true
      end, function (default)
        data = System.default(T)
        return true, false
      end)
      if default then
        return extern, data
      end
    end
    -- <summary>
    -- Desetroys the element
    -- </summary>
    Destroy = function (this)
      return SlipeMtaDefinitions.MtaShared.DestroyElement(this.element)
    end
    -- <summary>
    -- This function returns one of the child elements of a given parent element. The child element is selected by its index (0 for the first child, 1 for the second and so on).
    -- </summary>
    GetChild = function (this, index)
      return SlipeSharedElements.ElementManager.getInstance():GetElement1(SlipeMtaDefinitions.MtaShared.GetElementChild(this.element, index))
    end
    -- <summary>
    -- This function is used to retrieve a list of the child elements of a given parent element. Note that it will only return direct children and not elements that are further down the element tree.
    -- </summary>
    GetChildren = function (this, ofType)
      local mtaElements = SlipeMtaDefinitions.MtaShared.GetArrayFromTable(SlipeMtaDefinitions.MtaShared.GetElementChildren(this.element, ofType), "MTAElement", T)
      return SlipeSharedElements.ElementManager.getInstance():CastArray(mtaElements, class)
    end
    -- <summary>
    -- This function returns an element from the specified ID. If more than one element with the same ID exists, only the first one in the order it appears in the XML tree will be returned by this function.
    -- </summary>
    GetByID = function (id, index)
      return SlipeSharedElements.ElementManager.getInstance():GetElement1(SlipeMtaDefinitions.MtaShared.GetElementByID(id, index))
    end
    -- <summary>
    -- gets Slipe Element from Mta element
    -- </summary>
    op_Explicit = function (mtaElement)
      return SlipeSharedElements.ElementManager.getInstance():GetElement1(mtaElement)
    end
    -- <summary>
    -- Adds an eventhandler to this element
    -- </summary>
    ListenForEvent = function (this, eventName, propagated, priorty)
      SlipeSharedElements.ElementManager.getInstance():AddEventHandler(this, eventName, propagated, priorty)
    end
    HandleEvent = function (this, eventName, source, p1, p2, p3, p4, p5, p6, p7, p8)
    end
    class = {
      getRoot = getRoot,
      getMTAElement = getMTAElement,
      getType = getType,
      getID = getID,
      setID = setID,
      getChildCount = getChildCount,
      getParent = getParent,
      setParent = setParent,
      getCallPropagationEnabled = getCallPropagationEnabled,
      setCallPropagationEnabled = setCallPropagationEnabled,
      SetData = SetData,
      GetData = GetData,
      TryGetData = TryGetData,
      GetData1 = GetData1,
      TryGetData1 = TryGetData1,
      Destroy = Destroy,
      GetChild = GetChild,
      GetChildren = GetChildren,
      GetByID = GetByID,
      op_Explicit = op_Explicit,
      ListenForEvent = ListenForEvent,
      HandleEvent = HandleEvent,
      __ctor__ = {
        __ctor1__,
        __ctor2__,
        __ctor3__
      },
      __metadata__ = function (out)
        return {
          fields = {
            { "element", 0x5, out.Slipe.MtaDefinitions.MtaElement }
          },
          properties = {
            { "CallPropagationEnabled", 0x106, System.Boolean, getCallPropagationEnabled, setCallPropagationEnabled },
            { "ChildCount", 0x206, System.Int32, getChildCount },
            { "ID", 0x106, System.String, getID, setID },
            { "MTAElement", 0x206, out.Slipe.MtaDefinitions.MtaElement, getMTAElement },
            { "Parent", 0x106, class, getParent, setParent },
            { "Root", 0x20E, class, getRoot },
            { "Type", 0x206, System.String, getType }
          },
          methods = {
            { ".ctor", 0x6, __ctor1__ },
            { ".ctor", 0x106, __ctor2__, out.Slipe.MtaDefinitions.MtaElement },
            { ".ctor", 0x206, __ctor3__, System.String, System.String },
            { "Destroy", 0x86, Destroy, System.Boolean },
            { "GetByID", 0x28E, GetByID, System.String, System.Int32, class },
            { "GetChild", 0x186, GetChild, System.Int32, class },
            { "GetChildren", 0x186, GetChildren, System.String, System.Array(out.Slipe.Shared.Elements.Element) },
            { "GetData", 0x286, GetData, System.String, System.Boolean, System.Object },
            { "GetData", 0x10286, GetData1, function (T) return System.String, System.Boolean, T end },
            { "HandleEvent", 0xA06, HandleEvent, System.String, out.Slipe.MtaDefinitions.MtaElement, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object, System.Object },
            { "ListenForEvent", 0x306, ListenForEvent, System.String, System.Boolean, System.String },
            { "SetData", 0x306, SetData, System.String, System.Object, System.Boolean },
            { "TryGetData", 0x386, TryGetData, System.String, System.Object, System.Boolean, System.Boolean },
            { "TryGetData", 0x10386, TryGetData1, function (T) return System.String, T, System.Boolean, System.Boolean end }
          },
          events = {
            { "OnDestroy", 0x6, System.Delegate(class, out.Slipe.Shared.Elements.Events.OnDestroyEventArgs, System.Void) }
          },
          class = { 0x6, System.new(out.Slipe.Shared.Elements.DefaultElementClassAttribute, 2, 0 --[[ElementType.Element]]) }
        }
      end
    }
    return class
  end)
end)

-- Generated by CSharp.lua Compiler
local System = System
local SlipeClientGui
local SlipeMtaDefinitions
System.import(function (out)
  SlipeClientGui = Slipe.Client.Gui
  SlipeMtaDefinitions = Slipe.MtaDefinitions
end)
System.namespace("Slipe.Client.Gui", function (namespace)
  -- <summary>
  -- Represents a Cegui progress bar
  -- </summary>
  namespace.class("ProgressBar", function (namespace)
    local getProgress, setProgress, __ctor1__, __ctor2__
    __ctor1__ = function (this, element)
      SlipeClientGui.GuiElement.__ctor__(this, element)
    end
    -- <summary>
    -- Create a progress bar
    -- </summary>
    __ctor2__ = function (this, position, dimensions, relative, parent)
      local default = parent
      if default ~= nil then
        default = default:getMTAElement()
      end
      __ctor1__(this, SlipeMtaDefinitions.MtaClient.GuiCreateProgressBar(position.X, position.Y, dimensions.X, dimensions.Y, relative, default))
    end
    getProgress = function (this)
      return SlipeMtaDefinitions.MtaClient.GuiProgressBarGetProgress(this.element)
    end
    setProgress = function (this, value)
      SlipeMtaDefinitions.MtaClient.GuiProgressBarSetProgress(this.element, value)
    end
    return {
      __inherits__ = function (out)
        return {
          out.Slipe.Client.Gui.GuiElement
        }
      end,
      getProgress = getProgress,
      setProgress = setProgress,
      __ctor__ = {
        __ctor1__,
        __ctor2__
      },
      __metadata__ = function (out)
        return {
          properties = {
            { "Progress", 0x106, System.Single, getProgress, setProgress }
          },
          methods = {
            { ".ctor", 0x106, __ctor1__, out.Slipe.MtaDefinitions.MtaElement },
            { ".ctor", 0x406, __ctor2__, System.Numerics.Vector2, System.Numerics.Vector2, System.Boolean, out.Slipe.Client.Gui.GuiElement }
          },
          class = { 0x6, System.new(out.Slipe.Shared.Elements.DefaultElementClassAttribute, 2, 19 --[[ElementType.GuiProgressBar]]) }
        }
      end
    }
  end)
end)

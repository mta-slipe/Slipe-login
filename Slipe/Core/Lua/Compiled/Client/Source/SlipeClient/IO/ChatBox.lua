-- Generated by CSharp.lua Compiler
local System = System
local SlipeMtaDefinitions
local SlipeSharedUtilities
local SystemNumerics
System.import(function (out)
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeSharedUtilities = Slipe.Shared.Utilities
  SystemNumerics = System.Numerics
end)
System.namespace("Slipe.Client.IO", function (namespace)
  -- <summary>
  -- Represents the ingame chatbox
  -- </summary>
  namespace.class("ChatBox", function (namespace)
    local getActive, getVisible, setVisible, getInputBoxActive, getFont, getLines, getBackgroundColor, getTextColor, 
    getInputColor, getInputPrefixColor, getInputTextColor, getScale, getOffset, getPositionalAlignment, getAllignment, getWidth, 
    getTextFades, getBackgroundFades, getLineLife, getLineFadeOut, getUseCegui, getTextScale, WriteLine, WriteLine1, 
    Clear
    getActive = function ()
      return SlipeMtaDefinitions.MtaClient.IsChatBoxInputActive()
    end
    getVisible = function ()
      return SlipeMtaDefinitions.MtaClient.IsChatVisible()
    end
    setVisible = function (value)
      SlipeMtaDefinitions.MtaClient.ShowChat(value)
    end
    getInputBoxActive = function ()
      return SlipeMtaDefinitions.MtaClient.IsChatBoxInputActive()
    end
    getFont = function ()
      return System.cast(System.Int32, SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_font"))
    end
    getLines = function ()
      return SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_lines")
    end
    getBackgroundColor = function ()
      local r = SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_color")
      return System.new(SlipeSharedUtilities.Color, 3, r[1], r[2], r[3], r[4])
    end
    getTextColor = function ()
      local r = SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_text_color")
      return System.new(SlipeSharedUtilities.Color, 3, r[1], r[2], r[3], r[4])
    end
    getInputColor = function ()
      local r = SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_input_color")
      return System.new(SlipeSharedUtilities.Color, 3, r[1], r[2], r[3], r[4])
    end
    getInputPrefixColor = function ()
      local r = SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_input_prefix_color")
      return System.new(SlipeSharedUtilities.Color, 3, r[1], r[2], r[3], r[4])
    end
    getInputTextColor = function ()
      local r = SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_input_text_color")
      return System.new(SlipeSharedUtilities.Color, 3, r[1], r[2], r[3], r[4])
    end
    getScale = function ()
      local r = SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_scale")
      return SystemNumerics.Vector2(r[1], r[2])
    end
    getOffset = function ()
      local x = SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_position_offset_x")
      local y = SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_position_offset_y")
      return SystemNumerics.Vector2(x, y)
    end
    getPositionalAlignment = function ()
      local x = SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_position_horizontal")
      local y = SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_position_vertical")
      return SystemNumerics.Vector2(x, y)
    end
    getAllignment = function ()
      return SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_position_vertical")
    end
    getWidth = function ()
      return SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_width")
    end
    getTextFades = function ()
      return SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_css_style_text")
    end
    getBackgroundFades = function ()
      return SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_css_style_background")
    end
    getLineLife = function ()
      return SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_line_life")
    end
    getLineFadeOut = function ()
      return SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_line_fade_out")
    end
    getUseCegui = function ()
      return SlipeMtaDefinitions.MtaClient.GetChatboxLayout("chat_use_cegui")
    end
    getTextScale = function ()
      return SlipeMtaDefinitions.MtaClient.GetChatboxLayout("text_scale")
    end
    -- <summary>
    -- Writes a line to the chatbox
    -- </summary>
    -- <param name="color"></param>
    -- <param name="colorCoded"></param>
    WriteLine = function (message, color, colorCoded)
      SlipeMtaDefinitions.MtaClient.OutputChatBox(message, color:getR(), color:getG(), color:getB(), colorCoded)
    end
    -- <summary>
    -- Writes a line to the chatbox
    -- </summary>
    WriteLine1 = function (message)
      WriteLine(message, SlipeSharedUtilities.Color.getWhite(), false)
    end
    -- <summary>
    -- Clears the chatbox
    -- </summary>
    Clear = function ()
      SlipeMtaDefinitions.MtaClient.ClearChatBox()
    end
    return {
      getActive = getActive,
      getVisible = getVisible,
      setVisible = setVisible,
      getInputBoxActive = getInputBoxActive,
      getFont = getFont,
      getLines = getLines,
      getBackgroundColor = getBackgroundColor,
      getTextColor = getTextColor,
      getInputColor = getInputColor,
      getInputPrefixColor = getInputPrefixColor,
      getInputTextColor = getInputTextColor,
      getScale = getScale,
      getOffset = getOffset,
      getPositionalAlignment = getPositionalAlignment,
      getAllignment = getAllignment,
      getWidth = getWidth,
      getTextFades = getTextFades,
      getBackgroundFades = getBackgroundFades,
      getLineLife = getLineLife,
      getLineFadeOut = getLineFadeOut,
      getUseCegui = getUseCegui,
      getTextScale = getTextScale,
      WriteLine = WriteLine,
      WriteLine1 = WriteLine1,
      Clear = Clear,
      __metadata__ = function (out)
        return {
          properties = {
            { "Active", 0x20E, System.Boolean, getActive },
            { "Allignment", 0x20E, System.Int32, getAllignment },
            { "BackgroundColor", 0x20E, out.Slipe.Shared.Utilities.Color, getBackgroundColor },
            { "BackgroundFades", 0x20E, System.Boolean, getBackgroundFades },
            { "Font", 0x20E, System.Int32, getFont },
            { "InputBoxActive", 0x20E, System.Boolean, getInputBoxActive },
            { "InputColor", 0x20E, out.Slipe.Shared.Utilities.Color, getInputColor },
            { "InputPrefixColor", 0x20E, out.Slipe.Shared.Utilities.Color, getInputPrefixColor },
            { "InputTextColor", 0x20E, out.Slipe.Shared.Utilities.Color, getInputTextColor },
            { "LineFadeOut", 0x20E, System.Single, getLineFadeOut },
            { "LineLife", 0x20E, System.Single, getLineLife },
            { "Lines", 0x20E, System.Int32, getLines },
            { "Offset", 0x20E, System.Numerics.Vector2, getOffset },
            { "PositionalAlignment", 0x20E, System.Numerics.Vector2, getPositionalAlignment },
            { "Scale", 0x20E, System.Numerics.Vector2, getScale },
            { "TextColor", 0x20E, out.Slipe.Shared.Utilities.Color, getTextColor },
            { "TextFades", 0x20E, System.Boolean, getTextFades },
            { "TextScale", 0x20E, System.Single, getTextScale },
            { "UseCegui", 0x20E, System.Boolean, getUseCegui },
            { "Visible", 0x10E, System.Boolean, getVisible, setVisible },
            { "Width", 0x20E, System.Single, getWidth }
          },
          methods = {
            { "Clear", 0xE, Clear },
            { "WriteLine", 0x10E, WriteLine1, System.String },
            { "WriteLine", 0x30E, WriteLine, System.String, out.Slipe.Shared.Utilities.Color, System.Boolean }
          },
          events = {
            { "OnMessage", 0xE, System.Delegate(out.Slipe.Shared.Elements.Element, out.Slipe.Client.IO.Events.OnChatMessageEventArgs, System.Void) }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)

-- Generated by CSharp.lua Compiler
local System = System
local SlipeMtaDefinitions
local SlipeSharedElements
System.import(function (out)
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeSharedElements = Slipe.Shared.Elements
end)
System.namespace("Slipe.Shared.CollisionShapes", function (namespace)
  -- <summary>
  -- Base class for collision shapes
  -- </summary>
  namespace.class("CollisionShape", function (namespace)
    local getShapeType, getElementsWithin, IsInside, IsElementWithin, GetElementsWithin, class, __ctor__
    __ctor__ = function (this, element)
      SlipeSharedElements.PhysicalElement.__ctor__(this, element)
    end
    getShapeType = function (this)
      return SlipeMtaDefinitions.MtaShared.GetColShapeType(this.element)
    end
    getElementsWithin = function (this)
      local array = SlipeMtaDefinitions.MtaShared.GetArrayFromTable(SlipeMtaDefinitions.MtaShared.GetElementsWithinColShape(this.element), "MTAElement", T)
      return SlipeSharedElements.ElementManager.getInstance():CastArray(array, SlipeSharedElements.PhysicalElement)
    end
    -- <summary>
    -- Checks whether a certain position is inside a collision shape
    -- </summary>
    IsInside = function (this, position)
      return SlipeMtaDefinitions.MtaShared.IsInsideColShape(this.element, position.X, position.Y, position.Z)
    end
    -- <summary>
    -- Checks whether a certain element is inside a collision shape
    -- </summary>
    IsElementWithin = function (this, element)
      return SlipeMtaDefinitions.MtaShared.IsElementWithinColShape(this.element, element:getMTAElement())
    end
    -- <summary>
    -- Gets an array of all elements of a specific type inside the collision shape
    -- </summary>
    GetElementsWithin = function (this, T)
      local array = SlipeMtaDefinitions.MtaShared.GetArrayFromTable(SlipeMtaDefinitions.MtaShared.GetElementsWithinColShape(this.element, SlipeSharedElements.ElementManager.getInstance():GetTypeName(System.typeof(T))), "MTAElement", T)
      return SlipeSharedElements.ElementManager.getInstance():CastArray(array, T)
    end
    class = {
      __inherits__ = function (out)
        return {
          out.Slipe.Shared.Elements.PhysicalElement
        }
      end,
      getShapeType = getShapeType,
      getElementsWithin = getElementsWithin,
      IsInside = IsInside,
      IsElementWithin = IsElementWithin,
      GetElementsWithin = GetElementsWithin,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          properties = {
            { "ElementsWithin", 0x206, System.Array(out.Slipe.Shared.Elements.PhysicalElement), getElementsWithin },
            { "ShapeType", 0x206, System.String, getShapeType }
          },
          methods = {
            { ".ctor", 0x106, nil, out.Slipe.MtaDefinitions.MtaElement },
            { "GetElementsWithin", 0x10086, GetElementsWithin, function (T) return System.Array(T) end },
            { "IsElementWithin", 0x186, IsElementWithin, out.Slipe.Shared.Elements.PhysicalElement, System.Boolean },
            { "IsInside", 0x186, IsInside, System.Numerics.Vector3, System.Boolean }
          },
          events = {
            { "OnHit", 0x6, System.Delegate(class, out.Slipe.Shared.CollisionShapes.Events.OnHitEventArgs, System.Void) },
            { "OnLeave", 0x6, System.Delegate(class, out.Slipe.Shared.CollisionShapes.Events.OnLeaveEventArgs, System.Void) }
          },
          class = { 0x6, System.new(out.Slipe.Shared.Elements.DefaultElementClassAttribute, 2, 7 --[[ElementType.ColShape]]) }
        }
      end
    }
    return class
  end)
end)

-- Generated by CSharp.lua Compiler
local System = System
local SlipeMtaDefinitions
local SlipeSharedElements
local SlipeSharedHelpers
local SlipeSharedPeds
local SlipeSharedVehicles
local SlipeSharedWeapons
System.import(function (out)
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeSharedElements = Slipe.Shared.Elements
  SlipeSharedHelpers = Slipe.Shared.Helpers
  SlipeSharedPeds = Slipe.Shared.Peds
  SlipeSharedVehicles = Slipe.Shared.Vehicles
  SlipeSharedWeapons = Slipe.Shared.Weapons
end)
System.namespace("Slipe.Shared.Peds", function (namespace)
  -- <summary>
  -- Represents a pedestrian with shared server/client functionality
  -- </summary>
  namespace.class("SharedPed", function (namespace)
    local getWeaponSlot, setWeaponSlot, getArmor, getContactElement, getFightingStyle, getOccupiedVehicle, getVehicleSeat, getChocking, 
    getIsDead, getDoingGangDriveby, setDoingGangDriveby, getIsDucked, getHeadless, setHeadless, getIsInVehicle, getOnFire, 
    setOnFire, getIsOnGround, getHasJetpack, getTarget, getWalkingStyle, setWalkingStyle, getWeapon, getAmmoInClip, 
    getTotalAmmo, IsClothesSlotTattoo, AddClothes, AddClothes1, AddClothes2, GetClothesModel, GetClothesTexture, RemoveClothes, 
    GetWeaponInSlot, GetAmmoInClip, GetTotalAmmo, SetAnimation, ResetAnimation, SetAnimationProgress, SetAnimationSpeed, GedStat, 
    SetStat, Kill, Kill1, Kill2, RemoveFromVehicle, WarpIntoVehicle, WarpIntoVehicle1, FaceElement, 
    IsValidSkin, class, __ctor__
    __ctor__ = function (this, element)
      SlipeSharedElements.PhysicalElement.__ctor__(this, element)
    end
    getWeaponSlot = function (this)
      return SlipeMtaDefinitions.MtaShared.GetPedWeaponSlot(this.element)
    end
    setWeaponSlot = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetPedWeaponSlot(this.element, value)
    end
    getArmor = function (this)
      return SlipeMtaDefinitions.MtaShared.GetPedArmor(this.element)
    end
    getContactElement = function (this)
      local default, extern = System.try(function ()
        return true, SlipeSharedElements.ElementManager.getInstance():GetElement(SlipeMtaDefinitions.MtaShared.GetPedContactElement(this.element), SlipeSharedElements.PhysicalElement)
      end, function (default)
        if System.is(default, SlipeMtaDefinitions.MtaException) then
          return true, nil
        else
          return 1, default
        end
      end)
      if default then
        return extern
      end
    end
    getFightingStyle = function (this)
      return SlipeMtaDefinitions.MtaShared.GetPedFightingStyle(this.element)
    end
    getOccupiedVehicle = function (this)
      local default, extern = System.try(function ()
        return true, SlipeSharedElements.ElementManager.getInstance():GetElement(SlipeMtaDefinitions.MtaShared.GetPedOccupiedVehicle(this.element), SlipeSharedVehicles.SharedVehicle)
      end, function (default)
        if System.is(default, SlipeMtaDefinitions.MtaException) then
          return true, nil
        else
          return 1, default
        end
      end)
      if default then
        return extern
      end
    end
    getVehicleSeat = function (this)
      local default, extern = System.try(function ()
        return true, SlipeMtaDefinitions.MtaShared.GetPedOccupiedVehicleSeat(this.element)
      end, function (default)
        if System.is(default, SlipeMtaDefinitions.MtaException) then
          return true, 4 --[[Seat.None]]
        else
          return 1, default
        end
      end)
      if default then
        return extern
      end
    end
    getChocking = function (this)
      return SlipeMtaDefinitions.MtaShared.IsPedChoking(this.element)
    end
    getIsDead = function (this)
      return SlipeMtaDefinitions.MtaShared.IsPedDead(this.element)
    end
    getDoingGangDriveby = function (this)
      return SlipeMtaDefinitions.MtaShared.IsPedDoingGangDriveby(this.element)
    end
    setDoingGangDriveby = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetPedDoingGangDriveby(this.element, value)
    end
    getIsDucked = function (this)
      return SlipeMtaDefinitions.MtaShared.IsPedDucked(this.element)
    end
    getHeadless = function (this)
      return SlipeMtaDefinitions.MtaShared.IsPedHeadless(this.element)
    end
    setHeadless = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetPedHeadless(this.element, value)
    end
    getIsInVehicle = function (this)
      return SlipeMtaDefinitions.MtaShared.IsPedInVehicle(this.element)
    end
    getOnFire = function (this)
      return SlipeMtaDefinitions.MtaShared.IsPedOnFire(this.element)
    end
    setOnFire = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetPedOnFire(this.element, value)
    end
    getIsOnGround = function (this)
      return SlipeMtaDefinitions.MtaShared.IsPedOnGround(this.element)
    end
    getHasJetpack = function (this)
      return SlipeMtaDefinitions.MtaShared.IsPedWearingJetpack(this.element)
    end
    getTarget = function (this)
      local default, extern = System.try(function ()
        return true, SlipeSharedElements.ElementManager.getInstance():GetElement(SlipeMtaDefinitions.MtaShared.GetPedTarget(this.element), SlipeSharedElements.PhysicalElement)
      end, function (default)
        if System.is(default, SlipeMtaDefinitions.MtaException) then
          return true, nil
        else
          return 1, default
        end
      end)
      if default then
        return extern
      end
    end
    getWalkingStyle = function (this)
      return SlipeMtaDefinitions.MtaShared.GetPedWalkingStyle(this.element)
    end
    setWalkingStyle = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetPedWalkingStyle(this.element, value)
    end
    getWeapon = function (this)
      return SlipeSharedWeapons.SharedWeaponModel(SlipeMtaDefinitions.MtaShared.GetPedWeapon(this.element, getWeaponSlot(this)))
    end
    getAmmoInClip = function (this)
      return SlipeMtaDefinitions.MtaShared.GetPedAmmoInClip(this.element, getWeaponSlot(this))
    end
    getTotalAmmo = function (this)
      return SlipeMtaDefinitions.MtaShared.GetPedTotalAmmo(this.element, getWeaponSlot(this))
    end
    IsClothesSlotTattoo = function (this, slot)
      return slot > 3 and slot < 13
    end
    -- <summary>
    -- This function is used to set the current clothes on the ped.
    -- </summary>
    AddClothes = function (this, texture, model, slot)
      local t = texture:ToEnumString(SlipeSharedPeds.ClothesTexture)
      local m = model:ToEnumString(SlipeSharedPeds.ClothesModel)
      if IsClothesSlotTattoo(this, slot) then
        t = slot:ToString() .. t
        m = slot:ToString() .. m
      end
      return SlipeMtaDefinitions.MtaShared.AddPedClothes(this.element, t, m, slot)
    end
    -- <summary>
    -- Add a clothes item from a slot and an index
    -- </summary>
    AddClothes1 = function (this, slot, index)
      local result = SlipeMtaDefinitions.MtaShared.GetClothesByTypeIndex(slot, index)
      return SlipeMtaDefinitions.MtaShared.AddPedClothes(this.element, result[1], result[2], slot)
    end
    -- <summary>
    -- Add clothes from only texture and model (does not work on tattoos)
    -- </summary>
    AddClothes2 = function (this, texture, model)
      local result = SlipeMtaDefinitions.MtaShared.GetTypeIndexFromClothes(texture:ToEnumString(SlipeSharedPeds.ClothesTexture), model:ToEnumString(SlipeSharedPeds.ClothesModel))
      return AddClothes1(this, result[1], result[2])
    end
    -- <summary>
    -- Get the current clothes model of a slot
    -- </summary>
    GetClothesModel = function (this, slot)
      local result = SlipeMtaDefinitions.MtaShared.GetPedClothes(this.element, slot)
      return System.cast(System.Int32, System.Enum.Parse(System.typeof(SlipeSharedPeds.ClothesModel), result[2]))
    end
    -- <summary>
    -- Get the current clothes texture of a slot
    -- </summary>
    GetClothesTexture = function (this, slot)
      local result = SlipeMtaDefinitions.MtaShared.GetPedClothes(this.element, slot)
      return System.cast(System.Int32, System.Enum.Parse(System.typeof(SlipeSharedPeds.ClothesTexture), result[1]))
    end
    -- <summary>
    -- Remove clothes from a certain slot
    -- </summary>
    RemoveClothes = function (this, slot)
      return SlipeMtaDefinitions.MtaShared.RemovePedClothes(this.element, slot)
    end
    -- <summary>
    -- Get the weapon in a specific slot
    -- </summary>
    GetWeaponInSlot = function (this, slot)
      return SlipeSharedWeapons.SharedWeaponModel(SlipeMtaDefinitions.MtaShared.GetPedWeapon(this.element, slot))
    end
    -- <summary>
    -- This function returns an integer that contains the ammo a specific weaponslot
    -- </summary>
    GetAmmoInClip = function (this, slot)
      return SlipeMtaDefinitions.MtaShared.GetPedAmmoInClip(this.element, slot)
    end
    -- <summary>
    -- This function return the total ammo of a specific weaponslot
    -- </summary>
    GetTotalAmmo = function (this, slot)
      return SlipeMtaDefinitions.MtaShared.GetPedTotalAmmo(this.element, slot)
    end
    -- <summary>
    -- Sets the animation of this ped
    -- </summary>
    SetAnimation = function (this, animation, loop, time, updatePosition, interruptable, freeLastFrame, blendTime)
      return SlipeMtaDefinitions.MtaShared.SetPedAnimation(this.element, animation.Group, animation.Anim, time, loop, updatePosition, interruptable, freeLastFrame, blendTime)
    end
    -- <summary>
    -- Resets the animation back to normal
    -- </summary>
    ResetAnimation = function (this)
      return SlipeMtaDefinitions.MtaShared.SetPedAnimation(this.element, nil, nil, - 1, true, true, true, true, 250)
    end
    -- <summary>
    -- Sets the current animation progress of a player or ped.
    -- </summary>
    SetAnimationProgress = function (this, animation, progress)
      return SlipeMtaDefinitions.MtaShared.SetPedAnimationProgress(this.element, animation.Anim, progress)
    end
    -- <summary>
    -- Sets the current animation speed of a player or ped.
    -- </summary>
    SetAnimationSpeed = function (this, animation, speed)
      return SlipeMtaDefinitions.MtaShared.SetPedAnimationSpeed(this.element, animation.Anim, speed)
    end
    -- <summary>
    -- Get the value of a specific stat
    -- </summary>
    GedStat = function (this, stat)
      return SlipeMtaDefinitions.MtaShared.GetPedStat(this.element, stat)
    end
    -- <summary>
    -- Set a specific stat on this ped
    -- </summary>
    SetStat = function (this, stat, value)
      return SlipeMtaDefinitions.MtaShared.SetPedStat(this.element, stat, value)
    end
    -- <summary>
    -- Kill the ped with a killer, a weapon and a bodypart
    -- </summary>
    Kill = function (this, killer, weapon, bodyPart, stealth)
      return SlipeMtaDefinitions.MtaShared.KillPed(this.element, killer:getMTAElement(), weapon.ID, bodyPart, stealth)
    end
    -- <summary>
    -- Kill the ped, just providing a killer
    -- </summary>
    Kill1 = function (this, killer)
      return SlipeMtaDefinitions.MtaShared.KillPed(this.element, killer:getMTAElement(), 255, 255, false)
    end
    -- <summary>
    -- Kill the ped without a killer
    -- </summary>
    Kill2 = function (this)
      return SlipeMtaDefinitions.MtaShared.KillPed(this.element, nil, 255, 255, false)
    end
    -- <summary>
    -- Ejects the ped from a vehicle
    -- </summary>
    RemoveFromVehicle = function (this)
      return SlipeMtaDefinitions.MtaShared.RemovePedFromVehicle(this.element)
    end
    -- <summary>
    -- Warp this ped into a vehicle, specifying a seat
    -- </summary>
    WarpIntoVehicle = function (this, vehicle, seat)
      return SlipeMtaDefinitions.MtaShared.WarpPedIntoVehicle(this.element, vehicle:getMTAElement(), seat)
    end
    -- <summary>
    -- Warp this ped into the driver seat of a vehicle
    -- </summary>
    WarpIntoVehicle1 = function (this, vehicle)
      return SlipeMtaDefinitions.MtaShared.WarpPedIntoVehicle(this.element, vehicle:getMTAElement(), 0)
    end
    -- <summary>
    -- Make this ped face a specific physical element
    -- </summary>
    FaceElement = function (this, target)
      this:setRotation(SlipeSharedHelpers.NumericHelper.RotationBetweenPositions(target:getPosition(), this:getPosition()))
    end
    -- <summary>
    -- Get if a skin id is valid
    -- </summary>
    -- <returns></returns>
    IsValidSkin = function (model)
      local models = SlipeMtaDefinitions.MtaShared.GetListFromTable(SlipeMtaDefinitions.MtaShared.GetValidPedModels(), "System.Int32")
      return models:Contains(model)
    end
    class = {
      __inherits__ = function (out)
        return {
          out.Slipe.Shared.Elements.PhysicalElement
        }
      end,
      getWeaponSlot = getWeaponSlot,
      setWeaponSlot = setWeaponSlot,
      getArmor = getArmor,
      getContactElement = getContactElement,
      getFightingStyle = getFightingStyle,
      getOccupiedVehicle = getOccupiedVehicle,
      getVehicleSeat = getVehicleSeat,
      getChocking = getChocking,
      getIsDead = getIsDead,
      getDoingGangDriveby = getDoingGangDriveby,
      setDoingGangDriveby = setDoingGangDriveby,
      getIsDucked = getIsDucked,
      getHeadless = getHeadless,
      setHeadless = setHeadless,
      getIsInVehicle = getIsInVehicle,
      getOnFire = getOnFire,
      setOnFire = setOnFire,
      getIsOnGround = getIsOnGround,
      getHasJetpack = getHasJetpack,
      getTarget = getTarget,
      getWalkingStyle = getWalkingStyle,
      setWalkingStyle = setWalkingStyle,
      getWeapon = getWeapon,
      getAmmoInClip = getAmmoInClip,
      getTotalAmmo = getTotalAmmo,
      IsClothesSlotTattoo = IsClothesSlotTattoo,
      AddClothes = AddClothes,
      AddClothes1 = AddClothes1,
      AddClothes2 = AddClothes2,
      GetClothesModel = GetClothesModel,
      GetClothesTexture = GetClothesTexture,
      RemoveClothes = RemoveClothes,
      GetWeaponInSlot = GetWeaponInSlot,
      GetAmmoInClip = GetAmmoInClip,
      GetTotalAmmo = GetTotalAmmo,
      SetAnimation = SetAnimation,
      ResetAnimation = ResetAnimation,
      SetAnimationProgress = SetAnimationProgress,
      SetAnimationSpeed = SetAnimationSpeed,
      GedStat = GedStat,
      SetStat = SetStat,
      Kill = Kill,
      Kill1 = Kill1,
      Kill2 = Kill2,
      RemoveFromVehicle = RemoveFromVehicle,
      WarpIntoVehicle = WarpIntoVehicle,
      WarpIntoVehicle1 = WarpIntoVehicle1,
      FaceElement = FaceElement,
      IsValidSkin = IsValidSkin,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          properties = {
            { "AmmoInClip", 0x206, System.Int32, getAmmoInClip },
            { "Armor", 0x206, System.Single, getArmor },
            { "Chocking", 0x206, System.Boolean, getChocking },
            { "ContactElement", 0x206, out.Slipe.Shared.Elements.PhysicalElement, getContactElement },
            { "DoingGangDriveby", 0x106, System.Boolean, getDoingGangDriveby, setDoingGangDriveby },
            { "FightingStyle", 0x206, System.Int32, getFightingStyle },
            { "HasJetpack", 0x206, System.Boolean, getHasJetpack },
            { "Headless", 0x106, System.Boolean, getHeadless, setHeadless },
            { "IsDead", 0x206, System.Boolean, getIsDead },
            { "IsDucked", 0x206, System.Boolean, getIsDucked },
            { "IsInVehicle", 0x206, System.Boolean, getIsInVehicle },
            { "IsOnGround", 0x206, System.Boolean, getIsOnGround },
            { "OccupiedVehicle", 0x206, out.Slipe.Shared.Vehicles.SharedVehicle, getOccupiedVehicle },
            { "OnFire", 0x106, System.Boolean, getOnFire, setOnFire },
            { "Target", 0x206, out.Slipe.Shared.Elements.PhysicalElement, getTarget },
            { "TotalAmmo", 0x206, System.Int32, getTotalAmmo },
            { "VehicleSeat", 0x206, System.Int32, getVehicleSeat },
            { "WalkingStyle", 0x106, System.Int32, getWalkingStyle, setWalkingStyle },
            { "Weapon", 0x206, out.Slipe.Shared.Weapons.SharedWeaponModel, getWeapon },
            { "WeaponSlot", 0x106, System.Int32, getWeaponSlot, setWeaponSlot }
          },
          methods = {
            { ".ctor", 0x106, nil, out.Slipe.MtaDefinitions.MtaElement },
            { "AddClothes", 0x386, AddClothes, System.Int32, System.Int32, System.Int32, System.Boolean },
            { "AddClothes", 0x286, AddClothes1, System.Int32, System.Int32, System.Boolean },
            { "AddClothes", 0x286, AddClothes2, System.Int32, System.Int32, System.Boolean },
            { "FaceElement", 0x106, FaceElement, out.Slipe.Shared.Elements.PhysicalElement },
            { "GedStat", 0x186, GedStat, System.Int32, System.Single },
            { "GetAmmoInClip", 0x186, GetAmmoInClip, System.Int32, System.Int32 },
            { "GetClothesModel", 0x186, GetClothesModel, System.Int32, System.Int32 },
            { "GetClothesTexture", 0x186, GetClothesTexture, System.Int32, System.Int32 },
            { "GetTotalAmmo", 0x186, GetTotalAmmo, System.Int32, System.Int32 },
            { "GetWeaponInSlot", 0x186, GetWeaponInSlot, System.Int32, out.Slipe.Shared.Weapons.SharedWeaponModel },
            { "IsClothesSlotTattoo", 0x183, IsClothesSlotTattoo, System.Int32, System.Boolean },
            { "IsValidSkin", 0x18E, IsValidSkin, System.Int32, System.Boolean },
            { "Kill", 0x486, Kill, class, out.Slipe.Shared.Weapons.SharedWeaponModel, System.Int32, System.Boolean, System.Boolean },
            { "Kill", 0x186, Kill1, class, System.Boolean },
            { "Kill", 0x86, Kill2, System.Boolean },
            { "RemoveClothes", 0x186, RemoveClothes, System.Int32, System.Boolean },
            { "RemoveFromVehicle", 0x86, RemoveFromVehicle, System.Boolean },
            { "ResetAnimation", 0x86, ResetAnimation, System.Boolean },
            { "SetAnimation", 0x786, SetAnimation, out.Slipe.Shared.Peds.Animation, System.Boolean, System.Int32, System.Boolean, System.Boolean, System.Boolean, System.Int32, System.Boolean },
            { "SetAnimationProgress", 0x286, SetAnimationProgress, out.Slipe.Shared.Peds.Animation, System.Single, System.Boolean },
            { "SetAnimationSpeed", 0x286, SetAnimationSpeed, out.Slipe.Shared.Peds.Animation, System.Single, System.Boolean },
            { "SetStat", 0x286, SetStat, System.Int32, System.Single, System.Boolean },
            { "WarpIntoVehicle", 0x286, WarpIntoVehicle, out.Slipe.Shared.Vehicles.SharedVehicle, System.Int32, System.Boolean },
            { "WarpIntoVehicle", 0x186, WarpIntoVehicle1, out.Slipe.Shared.Vehicles.SharedVehicle, System.Boolean }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)

-- Generated by CSharp.lua Compiler
local System = System
local SlipeMtaDefinitions
local SlipeSharedElements
local SlipeSharedUtilities
local SystemNumerics
System.import(function (out)
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeSharedElements = Slipe.Shared.Elements
  SlipeSharedUtilities = Slipe.Shared.Utilities
  SystemNumerics = System.Numerics
end)
System.namespace("Slipe.Shared.Radar", function (namespace)
  -- <summary>
  -- Class representing a (mini)map radar area
  -- </summary>
  namespace.class("SharedRadarArea", function (namespace)
    local getColor, setColor, getSize, setSize, getFlashing, setFlashing, IsInside, IsInside1, 
    __ctor1__, __ctor2__, __ctor3__
    __ctor1__ = function (this, element)
      SlipeSharedElements.PhysicalElement.__ctor__(this, element)
    end
    -- <summary>
    -- Creates a radar area from the createRadarArea parameters
    -- </summary>
    __ctor2__ = function (this, position, dimensions, color, visibleTo)
      local default = visibleTo
      if default ~= nil then
        default = default:getMTAElement()
      end
      __ctor1__(this, SlipeMtaDefinitions.MtaShared.CreateRadarArea(position.X, position.Y, dimensions.X, dimensions.Y, color:getR(), color:getG(), color:getB(), color:getA(), default))
    end
    -- <summary>
    -- Creats a white radar area from just a position and a dimension
    -- </summary>
    __ctor3__ = function (this, position, dimension)
      __ctor2__(this, position:__clone__(), dimension:__clone__(), SlipeSharedUtilities.Color.getWhite())
    end
    getColor = function (this)
      local tuple = SlipeMtaDefinitions.MtaShared.GetRadarAreaColor(this.element)
      return System.new(SlipeSharedUtilities.Color, 3, System.toByte(tuple[1]), System.toByte(tuple[2]), System.toByte(tuple[3]), System.toByte(tuple[4]))
    end
    setColor = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetRadarAreaColor(this.element, value:getR(), value:getG(), value:getB(), value:getA())
    end
    getSize = function (this)
      local tuple = SlipeMtaDefinitions.MtaShared.GetRadarAreaSize(this.element)
      return SystemNumerics.Vector2(tuple[1], tuple[2])
    end
    setSize = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetRadarAreaSize(this.element, value.X, value.Y)
    end
    getFlashing = function (this)
      return SlipeMtaDefinitions.MtaShared.IsRadarAreaFlashing(this.element)
    end
    setFlashing = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetRadarAreaFlashing(this.element, value)
    end
    -- <summary>
    -- Checks if a certain 2D position is inside a radar area
    -- </summary>
    IsInside = function (this, position)
      return SlipeMtaDefinitions.MtaShared.IsInsideRadarArea(this.element, position.X, position.Y)
    end
    -- <summary>
    -- Checks if a certain 3D position is inside a radar area
    -- </summary>
    IsInside1 = function (this, position)
      return SlipeMtaDefinitions.MtaShared.IsInsideRadarArea(this.element, position.X, position.Y)
    end
    return {
      __inherits__ = function (out)
        return {
          out.Slipe.Shared.Elements.PhysicalElement
        }
      end,
      getColor = getColor,
      setColor = setColor,
      getSize = getSize,
      setSize = setSize,
      getFlashing = getFlashing,
      setFlashing = setFlashing,
      IsInside = IsInside,
      IsInside1 = IsInside1,
      __ctor__ = {
        __ctor1__,
        __ctor2__,
        __ctor3__
      },
      __metadata__ = function (out)
        return {
          properties = {
            { "Color", 0x106, out.Slipe.Shared.Utilities.Color, getColor, setColor },
            { "Flashing", 0x106, System.Boolean, getFlashing, setFlashing },
            { "Size", 0x106, System.Numerics.Vector2, getSize, setSize }
          },
          methods = {
            { ".ctor", 0x106, __ctor1__, out.Slipe.MtaDefinitions.MtaElement },
            { ".ctor", 0x406, __ctor2__, System.Numerics.Vector2, System.Numerics.Vector2, out.Slipe.Shared.Utilities.Color, out.Slipe.Shared.Elements.Element },
            { ".ctor", 0x206, __ctor3__, System.Numerics.Vector2, System.Numerics.Vector2 },
            { "IsInside", 0x186, IsInside, System.Numerics.Vector2, System.Boolean },
            { "IsInside", 0x186, IsInside1, System.Numerics.Vector3, System.Boolean }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)

-- Generated by CSharp.lua Compiler
local System = System
local SlipeMtaDefinitions
local SlipeSharedElements
local SlipeSharedMarkers
local SlipeSharedUtilities
local SystemNumerics
System.import(function (out)
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeSharedElements = Slipe.Shared.Elements
  SlipeSharedMarkers = Slipe.Shared.Markers
  SlipeSharedUtilities = Slipe.Shared.Utilities
  SystemNumerics = System.Numerics
end)
System.namespace("Slipe.Shared.Markers", function (namespace)
  -- <summary>
  -- Class that represents different types of markers
  -- </summary>
  namespace.class("SharedMarker", function (namespace)
    local getCount, getColor, setColor, getIcon, setIcon, getSize, setSize, getTarget, 
    setTarget, getMarkerType, setMarkerType, class, __ctor__
    __ctor__ = function (this, element)
      SlipeSharedElements.PhysicalElement.__ctor__(this, element)
    end
    getCount = function ()
      return SlipeMtaDefinitions.MtaShared.GetMarkerCount()
    end
    getColor = function (this)
      local tuple = SlipeMtaDefinitions.MtaShared.GetMarkerColor(this.element)
      return System.new(SlipeSharedUtilities.Color, 3, System.toByte(tuple[1]), System.toByte(tuple[2]), System.toByte(tuple[3]), System.toByte(tuple[4]))
    end
    setColor = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetMarkerColor(this.element, value:getR(), value:getG(), value:getB(), value:getA())
    end
    getIcon = function (this)
      local _, result = System.Enum.TryParse(SlipeSharedMarkers.MarkerIcon, SlipeMtaDefinitions.MtaShared.GetMarkerIcon(this.element), true)
      return result
    end
    setIcon = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetMarkerIcon(this.element, value:ToEnumString(SlipeSharedMarkers.MarkerIcon):ToLower())
    end
    getSize = function (this)
      return SlipeMtaDefinitions.MtaShared.GetMarkerSize(this.element)
    end
    setSize = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetMarkerSize(this.element, value)
    end
    getTarget = function (this)
      local result = SlipeMtaDefinitions.MtaShared.GetMarkerTarget(this.element)
      return SystemNumerics.Vector3(result[1], result[2], result[3])
    end
    setTarget = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetMarkerTarget(this.element, value.X, value.Y, value.Z)
    end
    getMarkerType = function (this)
      local _, result = System.Enum.TryParse(SlipeSharedMarkers.MarkerType, SlipeMtaDefinitions.MtaShared.GetMarkerType(this.element), true)
      return result
    end
    setMarkerType = function (this, value)
      SlipeMtaDefinitions.MtaShared.SetMarkerType(this.element, value:ToEnumString(SlipeSharedMarkers.MarkerType):ToLower())
    end
    class = {
      __inherits__ = function (out)
        return {
          out.Slipe.Shared.Elements.PhysicalElement
        }
      end,
      getCount = getCount,
      getColor = getColor,
      setColor = setColor,
      getIcon = getIcon,
      setIcon = setIcon,
      getSize = getSize,
      setSize = setSize,
      getTarget = getTarget,
      setTarget = setTarget,
      getMarkerType = getMarkerType,
      setMarkerType = setMarkerType,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          properties = {
            { "Color", 0x106, out.Slipe.Shared.Utilities.Color, getColor, setColor },
            { "Count", 0x20E, System.Int32, getCount },
            { "Icon", 0x106, System.Int32, getIcon, setIcon },
            { "MarkerType", 0x106, System.Int32, getMarkerType, setMarkerType },
            { "Size", 0x106, System.Single, getSize, setSize },
            { "Target", 0x106, System.Numerics.Vector3, getTarget, setTarget }
          },
          methods = {
            { ".ctor", 0x106, nil, out.Slipe.MtaDefinitions.MtaElement }
          },
          events = {
            { "OnHit", 0x6, System.Delegate(class, out.Slipe.Shared.Markers.Events.OnHitEventArgs, System.Void) },
            { "OnLeave", 0x6, System.Delegate(class, out.Slipe.Shared.Markers.Events.OnLeaveEventArgs, System.Void) }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)

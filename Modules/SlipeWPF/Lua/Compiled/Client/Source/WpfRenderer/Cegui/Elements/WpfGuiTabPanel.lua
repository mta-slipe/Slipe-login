-- Generated by CSharp.lua Compiler
local System = System
local SlipeClientGui
local SystemNumerics
local SystemWindowsControls
local SystemWindowsMedia
local WpfRendererCegui
System.import(function (out)
  SlipeClientGui = Slipe.Client.Gui
  SystemNumerics = System.Numerics
  SystemWindowsControls = System.Windows.Controls
  SystemWindowsMedia = System.Windows.Media
  WpfRendererCegui = WpfRenderer.Cegui
end)
System.namespace("WpfRenderer.Cegui.Elements", function (namespace)
  namespace.class("WpfGuiTabPanel", function (namespace)
    local UpdateSelectedItem, UpdateSelectedIndex, UpdateSelectedvalue, __ctor__
    __ctor__ = function (this, tabControl, parent)
      SlipeClientGui.TabPanel.__ctor__[2](this, SystemNumerics.Vector2(System.ToSingle(tabControl:getMargin():getLeft()), System.ToSingle(tabControl:getMargin():getTop())), SystemNumerics.Vector2(System.ToSingle(tabControl:getWidth()), System.ToSingle(tabControl:getHeight())), false, parent)
      this.tabControl = tabControl

      WpfRendererCegui.GuiWpfHelper.AttachHandlers(this, tabControl)

      WpfRendererCegui.GuiWpfHelper.CreateChildren(this, tabControl)

      this.OnClick = this.OnClick + function (source, args)
        local tab = this:getSelected()

        local index = - 1
        local item = nil
        for i = 0, this:getChildCount() - 1 do
          if this:GetChild(i) == tab then
            index = i
            item = System.cast(SystemWindowsControls.TabItem, SystemWindowsMedia.VisualTreeHelper.GetChild(this.tabControl, i))
            break
          end
        end

        tabControl:setSelectedValue(tab:getContent())
        tabControl:setSelectedIndex(index)
        tabControl:setSelectedItem(item)

        if tabControl.SelectionChanged then
            tabControl:SelectionChanged(this, System.Windows.RoutedEventArgs());
        end
      end

      tabControl:addSelectedItemChanged(System.fn(this, UpdateSelectedItem))
      tabControl:addSelectedIndexChanged(System.fn(this, UpdateSelectedIndex))
      tabControl:addSelectedValueChanged(System.fn(this, UpdateSelectedvalue))
    end
    UpdateSelectedItem = function (this, item)
      local childCount = SystemWindowsMedia.VisualTreeHelper.GetChildrenCount(this.tabControl)
      for i = 0, childCount - 1 do
        if SystemWindowsMedia.VisualTreeHelper.GetChild(this.tabControl, i) == item then
          this:setSelected(System.as(this:GetChild(i), SlipeClientGui.Tab))
        end
      end
    end
    UpdateSelectedIndex = function (this, index)
      this:setSelected(System.as(this:GetChild(index), SlipeClientGui.Tab))
    end
    UpdateSelectedvalue = function (this, value)
      local childCount = SystemWindowsMedia.VisualTreeHelper.GetChildrenCount(this.tabControl)
      for i = 0, childCount - 1 do
        local child = SystemWindowsMedia.VisualTreeHelper.GetChild(this.tabControl, i)
        local name = this.tabControl:GetType():getName()
        if System.cast(System.String, (System.as(child, SystemWindowsControls.TabItem)):getHeader()) == value then
          this:setSelected(System.as(this:GetChild(i), SlipeClientGui.Tab))
        end
      end
    end
    return {
      __inherits__ = function (out)
        return {
          out.Slipe.Client.Gui.TabPanel
        }
      end,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "tabControl", 0x1, System.Windows.Controls.TabControl }
          },
          methods = {
            { ".ctor", 0x206, nil, System.Windows.Controls.TabControl, out.Slipe.Client.Gui.GuiElement },
            { "UpdateSelectedIndex", 0x101, UpdateSelectedIndex, System.Int32 },
            { "UpdateSelectedItem", 0x101, UpdateSelectedItem, System.Windows.Controls.TabItem },
            { "UpdateSelectedvalue", 0x101, UpdateSelectedvalue, System.String }
          },
          class = { 0x4 }
        }
      end
    }
  end)
end)

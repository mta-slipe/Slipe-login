-- Generated by CSharp.lua Compiler
local System = System
local SystemWindows
local SystemWindowsMedia
local WpfRendererCeguiElements
System.import(function (out)
  SystemWindows = System.Windows
  SystemWindowsMedia = System.Windows.Media
  WpfRendererCeguiElements = WpfRenderer.Cegui.Elements
end)
System.namespace("WpfRenderer.Cegui.Elements", function (namespace)
  namespace.class("WpfGuiStackPanel", function (namespace)
    local __ctor__
    __ctor__ = function (this, stackPanel, parent)
      WpfRendererCeguiElements.WpfGuiDummy.__ctor__(this, stackPanel, parent)
      local childrenCount = SystemWindowsMedia.VisualTreeHelper.GetChildrenCount(stackPanel)
      for i = 0, childrenCount - 1 do
        local child = System.cast(SystemWindows.FrameworkElement, SystemWindowsMedia.VisualTreeHelper.GetChild(stackPanel, i))
        if stackPanel:getOrientation() == 0 --[[Orientation.Horizontal]] then
          child:setMargin(SystemWindows.Thickness(i * stackPanel:getWidth() / childrenCount, child:getMargin():getTop(), child:getMargin():getRight(), child:getMargin():getBottom()))
          child:setWidth(stackPanel:getWidth() / childrenCount)
        else
          child:setMargin(SystemWindows.Thickness(child:getMargin():getLeft(), i * stackPanel:getWidth() / childrenCount, child:getMargin():getRight(), child:getMargin():getBottom()))
          child:setHeight(stackPanel:getHeight() / childrenCount)
        end
      end
    end
    return {
      __inherits__ = function (out)
        return {
          out.WpfRenderer.Cegui.Elements.WpfGuiDummy
        }
      end,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          methods = {
            { ".ctor", 0x206, nil, System.Windows.Controls.StackPanel, out.Slipe.Client.Gui.GuiElement }
          },
          class = { 0x4 }
        }
      end
    }
  end)
end)
